// <auto-generated />
using CleanAPI.Games.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CleanAPI.Games.Infrastructure.Data.Migrations
{
  [DbContext(typeof(AppDbContext))]
  partial class AppDbContextModelSnapshot : ModelSnapshot
  {
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
      modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

      modelBuilder.Entity("CleanAPI.Games.Core.UserAggregate.User", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("INTEGER");

            b.Property<string>("Name")
                      .IsRequired()
                      .HasMaxLength(100)
                      .HasColumnType("TEXT");

            b.Property<int>("Status")
                      .HasColumnType("INTEGER");

            b.HasKey("Id");

            b.ToTable("Users");
          });

      modelBuilder.Entity("CleanAPI.Games.Core.GameAggregate.Game", b =>
                {
                  b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("INTEGER");

                  b.Property<string>("Name")
                      .IsRequired()
                      .HasMaxLength(100)
                      .HasColumnType("TEXT");

                  b.Property<int>("Status")
                      .HasColumnType("INTEGER");

                  b.HasKey("Id");

                  b.ToTable("Games");
                });

      //modelBuilder.Entity("CleanAPI.Games.Core.UserAggregate.User", b =>
      //    {
      //      b.OwnsOne("CleanAPI.Games.Core.UserAggregate.PhoneNumber", "PhoneNumber", b1 =>
      //                {
      //                  b1.Property<int>("UserId")
      //                            .HasColumnType("INTEGER");

      //                  b1.Property<string>("CountryCode")
      //                            .IsRequired()
      //                            .HasColumnType("TEXT");

      //                  b1.Property<string>("Extension")
      //                            .HasColumnType("TEXT");

      //                  b1.Property<string>("Number")
      //                            .IsRequired()
      //                            .HasColumnType("TEXT");

      //                  b1.HasKey("UserId");

      //                  b1.ToTable("Users");

      //                  b1.WithOwner()
      //                            .HasForeignKey("UserId");
      //                });

      //      b.Navigation("PhoneNumber");
      //    });


#pragma warning restore 612, 618
    }
  }
}
